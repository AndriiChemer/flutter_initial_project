// Mocks generated by Mockito 5.4.4 from annotations
// in iteo_libraries_example/test/presentation/page/settings/settings_page_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:iteo_libraries_example/domain/app_theme/enum/app_theme_type.dart'
    as _i4;
import 'package:iteo_libraries_example/domain/app_theme/use_case/get_app_theme_type_use_case.dart'
    as _i5;
import 'package:iteo_libraries_example/domain/app_theme/use_case/save_app_theme_type_use_case.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SaveAppThemeTypeUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveAppThemeTypeUseCase extends _i1.Mock
    implements _i2.SaveAppThemeTypeUseCase {
  MockSaveAppThemeTypeUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call(_i4.AppThemeType? type) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [type],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [GetAppThemeTypeStreamUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAppThemeTypeStreamUseCase extends _i1.Mock
    implements _i5.GetAppThemeTypeStreamUseCase {
  MockGetAppThemeTypeStreamUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.AppThemeType> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i3.Stream<_i4.AppThemeType>.empty(),
      ) as _i3.Stream<_i4.AppThemeType>);
}
